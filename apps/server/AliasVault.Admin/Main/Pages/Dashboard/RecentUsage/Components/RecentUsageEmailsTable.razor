@using AliasVault.Admin.Main.Models
@using AliasVault.Admin.Services
@using AliasVault.RazorComponents.Tables

<div class="p-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 sm:p-6 dark:bg-gray-800">
    <div class="flex items-center justify-between mb-4">
        <div>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Top Users by Emails Received (Last 72h)</h3>
            <p class="text-sm text-gray-500 dark:text-gray-400">Users who received the most emails in the last 72 hours</p>
        </div>
    </div>

    @if (Data != null && Data.Any())
    {
        <div class="mb-3">
            <Paginator CurrentPage="@CurrentPage" PageSize="@PageSize" TotalRecords="@Data.Count" OnPageChanged="@HandlePageChanged" />
        </div>
        <div class="overflow-x-auto">
            <SortableTable Columns="@_tableColumns">
                @foreach (var user in PagedData)
                {
                    <SortableTableRow>
                        <SortableTableColumn IsPrimary="true">
                            <a href="users/@user.UserId" class="text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 cursor-pointer">
                                @user.Username
                            </a>
                            @if (user.IsDisabled)
                            {
                                <span class="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200">
                                    Blocked
                                </span>
                            }
                        </SortableTableColumn>
                        <SortableTableColumn>@user.EmailCount72h.ToString("N0")</SortableTableColumn>
                        <SortableTableColumn>@StatisticsService.GetAccountAge(user.RegistrationDate)</SortableTableColumn>
                    </SortableTableRow>
                }
            </SortableTable>
        </div>
    }
    else if (Data != null)
    {
        <div class="text-center text-gray-500 dark:text-gray-400">
            <svg class="mx-auto h-12 w-12 text-gray-300 dark:text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l4 4 4-4m0 6l4 4 4-4"/>
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No Recent Email Activity</h3>
            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">No emails were received in the last 72 hours.</p>
        </div>
    }
    else
    {
        <div class="px-6 py-8 flex justify-center">
            <LoadingIndicator />
        </div>
    }
</div>

@code {
    [Parameter]
    public List<RecentUsageEmails>? Data { get; set; }

    private int CurrentPage { get; set; } = 1;
    private int PageSize { get; set; } = 20;

    private IEnumerable<RecentUsageEmails> PagedData =>
        Data?.Skip((CurrentPage - 1) * PageSize).Take(PageSize) ?? Enumerable.Empty<RecentUsageEmails>();

    private readonly List<TableColumn> _tableColumns = new()
    {
        new() { Title = "User", PropertyName = "Username", Sortable = false },
        new() { Title = "Emails (72h)", PropertyName = "EmailCount72h", Sortable = false },
        new() { Title = "Account Age", PropertyName = "RegistrationDate", Sortable = false }
    };

    private void HandlePageChanged(int page)
    {
        CurrentPage = page;
        StateHasChanged();
    }
}